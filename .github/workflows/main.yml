name: Manual Release
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0)'
        required: true
      prerelease:
        description: 'Is this a prerelease?'
        type: boolean
        default: false

permissions:
  contents: write

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: m3u8-GUI
            asset_name: m3u8-GUI-windows
            archive: zip
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
      - name: Create Archive
        shell: bash
        run: |
          binary_name="${{ matrix.artifact_name }}"
          dirname="$binary_name-${{ github.event.inputs.version }}-${{ matrix.target }}"
          mkdir "$dirname"
          mv "target/${{ matrix.target }}/release/$binary_name.exe" "$dirname"
          7z a "$dirname.${{ matrix.archive }}" "$dirname"
          echo "ASSET=$dirname.${{ matrix.archive }}" >> $GITHUB_ENV
      - name: Create Release
        if: matrix.os == 'windows-latest'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: Release v${{ github.event.inputs.version }}
          draft: false
          prerelease: ${{ github.event.inputs.prerelease }}
          generate_release_notes: true
      - name: Upload to Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.ASSET }}
